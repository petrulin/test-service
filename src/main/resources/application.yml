
server:
  port: 8000
  shutdown: graceful
spring:
  application:
    name: test-service
  datasource:
    hikari:
      driver-class-name: org.postgresql.Driver
      connection-timeout: 30000
      maximum-pool-size: 10
      minimum-idle: 10
      idle-timeout: 60000
      max-lifetime: 180000
      leak-detection-threshold: 0
      jdbc-url: ${DBURL}
      username: ${USER_NAME:''}
      password: ${PASSWORD:''}
    url: ${DBURL}
  jpa:
    show-sql: true
    database-platform: org.hibernate.dialect.PostgreSQL10Dialect
    hibernate:
      naming:
        physical-strategy: org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
    properties:
      hibernate:
        order_inserts: true
        order_updates: true
        jdbc:
          batch_size: 5
        generate_statistics: true
        session:
          events:
            log: false
      cache:
        use_second_level_cache: true
        use_query_cache: true
        region.factory_class: org.hibernate.cache.ehcache.SingletonEhCacheRegionFactory
management:
  endpoint:
    health:
      probes:
        enabled: true
    restart:
      enabled: true
    refresh:
      enabled: true
  endpoints:
    web:
      exposure:
        include: health,prometheus
      path-mapping:
        prometheus: metrics
      base-path: /
  metrics:
    distribution:
      percentiles:
        "[http.server.requests]": 0.5, 0.95, 0.99
      percentiles-histogram:
        "[http.server.requests]": true
      slo:
        "[http.server.requests]": 10ms, 100ms